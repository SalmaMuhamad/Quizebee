

@model NewQuestionViewModel

<div class="row">
    @Html.Partial("_Loader", "newQuestionLoader")
    @*<div class="col-md-12">
        <div class="panel panel-default panel-fill">
            <div class="panel-heading">
                <h3 class="panel-title">New Question</h3>
            </div>
            <div class="panel-body">
                <form id="QuestionForm">
                    <div class="form-group">
                        <label for="Name">Question Name</label>
                        <input type="text" value="@Model.Title" id="Name" name="Name" class="form-control" required="">
                    </div>

                    <div class="form-group m-b-20">
                        <div class="col-xs-12">
                            <label for="ConfirmPassword">Category </label>
                            @Html.DropDownListFor(t => t.CategoryID, new SelectList(Model.Categories, "ID", "Name"), "", new { @class = "form-control" })

                        </div>
                    </div>


                    <button class="btn btn-success waves-effect waves-light w-md" id="newQuestionButton" type="button">Add New Question</button>
                    <button class="btn btn-primary waves-effect waves-light w-md" id="goBackButton" type="button">Go Back</button>

                    <div id="QuestionFormErrorsDiv" style="display:none" class="mt-2 alert alert-icon alert-danger m" role="alert">
                        <i class="mdi mdi-alert-circle"></i>
                        <div id="QuestionFormErrors"></div>
                    </div>
                </form>

                <script>
                	$(document).ready(function () {
                        $("#newQuestionButton").click(function () {
                            $("#QuestionFormErrorsDiv").hide();

                            $("#newQuestionLoader").show();
                			$.ajax({
                				type: "POST",
                				async: true,
                				url: '@Url.CPNewQuestion()',
                                data: {
                                    Title: $("#Name").val(),
                                    CategoryID: $("#CategoryID").val(),

                                }
                            })
                			.done(function (data) {
                                $("#newQuestionLoader").hide();
                				if (data.Success)
                				{
                                    swal({
                                        title: 'New Question Added',
                                        type: 'success',
                                        confirmButtonColor: '#4fa7f3'
                                    });
                				}
                				else
                                {
                					$("#QuestionFormErrors").html(data.Errors);
                					$("#QuestionFormErrorsDiv").slideDown();
                					console.log(data.Errors);
                				}
                            })
                			.fail(function (XMLHttpRequest, textStatus, errorThrown) {
                                $("#newQuestionLoader").hide();
                				$("#QuestionFormErrors").html(errorThrown);
                				$("#QuestionFormErrorsDiv").slideDown();
                				console.log(errorThrown);
                            });
                        });

                        $("#goBackButton").click(function () {
                            $("#newQuestionLoader").show();

                            $.ajax({
                                type: "GET",
                                async: true,
                                url: '@Url.CPQuestions()',
                            })
                            .done(function (data) {
                                $('#questionsTab').toggle('slide', {
                                    direction: 'left'
                                }, 250, function () {
                                    $("#questionsTab").html(data);
                                        $('#questionsTab').toggle('slide', {
                                        direction: 'right'
                                    }, 250);
                                });
                            })
                            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                                $("#newQuestionLoader").hide();
                                alert(errorThrown);
                            });
                        });
                	});
                </script>
            </div>
        </div>
    </div>*@

    <div class="card-body">
     
        <div>
            @Html.Partial("_NewTextQuestion", Model)
        </div>
        
    </div>
</div>